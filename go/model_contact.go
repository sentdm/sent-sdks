/*
Sent.dm Core API

Sent.dm is a unified messaging API that enables developers to seamlessly send messages across multiple channels including SMS and WhatsApp. It provides programmatic management of customer accounts, messaging capabilities with intelligent routing, message delivery, and template management. The API supports creating, updating, and managing customer profiles, sending messages using templates, retrieving contact information, and handling templates across different messaging channels.

API version: 1.1.0
Contact: developers@sent.dm
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package sentdm

import (
	"encoding/json"
	"time"
)

// Contact Represents a contact in the Sent messaging platform with their communication preferences and channel availability
type Contact struct {
	// Unique identifier for the contact
	Id *string `json:"id,omitempty"`
	// Contact's phone number in E.164 format
	PhoneNumber *string `json:"phoneNumber,omitempty"`
	// Two-letter ISO country code
	CountryCode *string `json:"countryCode,omitempty"`
	// Phone number formatted according to national standards
	NationalFormat *string `json:"nationalFormat,omitempty"`
	// Comma-separated list of available messaging channels (SMS, WHATSAPP)
	AvailableChannels *string `json:"availableChannels,omitempty"`
	// Preferred messaging channel for this contact
	DefaultChannel *string `json:"defaultChannel,omitempty"`
	// Indicates if the contact's phone number has been verified
	Verified *bool `json:"verified,omitempty"`
	// Timestamp when the contact was created
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	// Timestamp when the contact was last updated
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// NewContact instantiates a new Contact object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContact() *Contact {
	this := Contact{}
	return &this
}

// NewContactWithDefaults instantiates a new Contact object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContactWithDefaults() *Contact {
	this := Contact{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Contact) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Contact) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Contact) SetId(v string) {
	o.Id = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *Contact) GetPhoneNumber() string {
	if o == nil || isNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetPhoneNumberOk() (*string, bool) {
	if o == nil || isNil(o.PhoneNumber) {
    return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *Contact) HasPhoneNumber() bool {
	if o != nil && !isNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *Contact) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *Contact) GetCountryCode() string {
	if o == nil || isNil(o.CountryCode) {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetCountryCodeOk() (*string, bool) {
	if o == nil || isNil(o.CountryCode) {
    return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *Contact) HasCountryCode() bool {
	if o != nil && !isNil(o.CountryCode) {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *Contact) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetNationalFormat returns the NationalFormat field value if set, zero value otherwise.
func (o *Contact) GetNationalFormat() string {
	if o == nil || isNil(o.NationalFormat) {
		var ret string
		return ret
	}
	return *o.NationalFormat
}

// GetNationalFormatOk returns a tuple with the NationalFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetNationalFormatOk() (*string, bool) {
	if o == nil || isNil(o.NationalFormat) {
    return nil, false
	}
	return o.NationalFormat, true
}

// HasNationalFormat returns a boolean if a field has been set.
func (o *Contact) HasNationalFormat() bool {
	if o != nil && !isNil(o.NationalFormat) {
		return true
	}

	return false
}

// SetNationalFormat gets a reference to the given string and assigns it to the NationalFormat field.
func (o *Contact) SetNationalFormat(v string) {
	o.NationalFormat = &v
}

// GetAvailableChannels returns the AvailableChannels field value if set, zero value otherwise.
func (o *Contact) GetAvailableChannels() string {
	if o == nil || isNil(o.AvailableChannels) {
		var ret string
		return ret
	}
	return *o.AvailableChannels
}

// GetAvailableChannelsOk returns a tuple with the AvailableChannels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetAvailableChannelsOk() (*string, bool) {
	if o == nil || isNil(o.AvailableChannels) {
    return nil, false
	}
	return o.AvailableChannels, true
}

// HasAvailableChannels returns a boolean if a field has been set.
func (o *Contact) HasAvailableChannels() bool {
	if o != nil && !isNil(o.AvailableChannels) {
		return true
	}

	return false
}

// SetAvailableChannels gets a reference to the given string and assigns it to the AvailableChannels field.
func (o *Contact) SetAvailableChannels(v string) {
	o.AvailableChannels = &v
}

// GetDefaultChannel returns the DefaultChannel field value if set, zero value otherwise.
func (o *Contact) GetDefaultChannel() string {
	if o == nil || isNil(o.DefaultChannel) {
		var ret string
		return ret
	}
	return *o.DefaultChannel
}

// GetDefaultChannelOk returns a tuple with the DefaultChannel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetDefaultChannelOk() (*string, bool) {
	if o == nil || isNil(o.DefaultChannel) {
    return nil, false
	}
	return o.DefaultChannel, true
}

// HasDefaultChannel returns a boolean if a field has been set.
func (o *Contact) HasDefaultChannel() bool {
	if o != nil && !isNil(o.DefaultChannel) {
		return true
	}

	return false
}

// SetDefaultChannel gets a reference to the given string and assigns it to the DefaultChannel field.
func (o *Contact) SetDefaultChannel(v string) {
	o.DefaultChannel = &v
}

// GetVerified returns the Verified field value if set, zero value otherwise.
func (o *Contact) GetVerified() bool {
	if o == nil || isNil(o.Verified) {
		var ret bool
		return ret
	}
	return *o.Verified
}

// GetVerifiedOk returns a tuple with the Verified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetVerifiedOk() (*bool, bool) {
	if o == nil || isNil(o.Verified) {
    return nil, false
	}
	return o.Verified, true
}

// HasVerified returns a boolean if a field has been set.
func (o *Contact) HasVerified() bool {
	if o != nil && !isNil(o.Verified) {
		return true
	}

	return false
}

// SetVerified gets a reference to the given bool and assigns it to the Verified field.
func (o *Contact) SetVerified(v bool) {
	o.Verified = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Contact) GetCreatedAt() time.Time {
	if o == nil || isNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.CreatedAt) {
    return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Contact) HasCreatedAt() bool {
	if o != nil && !isNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *Contact) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *Contact) GetUpdatedAt() time.Time {
	if o == nil || isNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.UpdatedAt) {
    return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Contact) HasUpdatedAt() bool {
	if o != nil && !isNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *Contact) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o Contact) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.PhoneNumber) {
		toSerialize["phoneNumber"] = o.PhoneNumber
	}
	if !isNil(o.CountryCode) {
		toSerialize["countryCode"] = o.CountryCode
	}
	if !isNil(o.NationalFormat) {
		toSerialize["nationalFormat"] = o.NationalFormat
	}
	if !isNil(o.AvailableChannels) {
		toSerialize["availableChannels"] = o.AvailableChannels
	}
	if !isNil(o.DefaultChannel) {
		toSerialize["defaultChannel"] = o.DefaultChannel
	}
	if !isNil(o.Verified) {
		toSerialize["verified"] = o.Verified
	}
	if !isNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !isNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableContact struct {
	value *Contact
	isSet bool
}

func (v NullableContact) Get() *Contact {
	return v.value
}

func (v *NullableContact) Set(val *Contact) {
	v.value = val
	v.isSet = true
}

func (v NullableContact) IsSet() bool {
	return v.isSet
}

func (v *NullableContact) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContact(val *Contact) *NullableContact {
	return &NullableContact{value: val, isSet: true}
}

func (v NullableContact) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContact) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


