/*
Sent.dm Core API

Sent.dm is a unified messaging API that enables developers to seamlessly send messages across multiple channels including SMS and WhatsApp. It provides programmatic management of customer accounts, messaging capabilities with intelligent routing, message delivery, and template management. The API supports creating, updating, and managing customer profiles, sending messages using templates, retrieving contact information, and handling templates across different messaging channels.

API version: 1.1.0
Contact: developers@sent.dm
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package sentdm

import (
	"encoding/json"
	"time"
)

// Customer Represents a customer account within the Sent platform, including messaging channel configurations and credentials
type Customer struct {
	// Unique identifier for the customer
	Id *string `json:"id,omitempty"`
	// Name of the customer organization
	Name *string `json:"name,omitempty"`
	// Primary phone number used for sending messages
	SendingPhoneNumber *string `json:"sendingPhoneNumber,omitempty"`
	// Identifier for the SMS messaging profile
	SmsMessagingProfileId *string `json:"smsMessagingProfileId,omitempty"`
	// Bearer token for authenticating SMS requests
	SmsBearerToken *string `json:"smsBearerToken,omitempty"`
	// Timestamp when the customer account was created
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	// Timestamp when the customer account was last updated
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// NewCustomer instantiates a new Customer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomer() *Customer {
	this := Customer{}
	return &this
}

// NewCustomerWithDefaults instantiates a new Customer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerWithDefaults() *Customer {
	this := Customer{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Customer) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Customer) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Customer) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Customer) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Customer) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Customer) SetName(v string) {
	o.Name = &v
}

// GetSendingPhoneNumber returns the SendingPhoneNumber field value if set, zero value otherwise.
func (o *Customer) GetSendingPhoneNumber() string {
	if o == nil || isNil(o.SendingPhoneNumber) {
		var ret string
		return ret
	}
	return *o.SendingPhoneNumber
}

// GetSendingPhoneNumberOk returns a tuple with the SendingPhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetSendingPhoneNumberOk() (*string, bool) {
	if o == nil || isNil(o.SendingPhoneNumber) {
    return nil, false
	}
	return o.SendingPhoneNumber, true
}

// HasSendingPhoneNumber returns a boolean if a field has been set.
func (o *Customer) HasSendingPhoneNumber() bool {
	if o != nil && !isNil(o.SendingPhoneNumber) {
		return true
	}

	return false
}

// SetSendingPhoneNumber gets a reference to the given string and assigns it to the SendingPhoneNumber field.
func (o *Customer) SetSendingPhoneNumber(v string) {
	o.SendingPhoneNumber = &v
}

// GetSmsMessagingProfileId returns the SmsMessagingProfileId field value if set, zero value otherwise.
func (o *Customer) GetSmsMessagingProfileId() string {
	if o == nil || isNil(o.SmsMessagingProfileId) {
		var ret string
		return ret
	}
	return *o.SmsMessagingProfileId
}

// GetSmsMessagingProfileIdOk returns a tuple with the SmsMessagingProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetSmsMessagingProfileIdOk() (*string, bool) {
	if o == nil || isNil(o.SmsMessagingProfileId) {
    return nil, false
	}
	return o.SmsMessagingProfileId, true
}

// HasSmsMessagingProfileId returns a boolean if a field has been set.
func (o *Customer) HasSmsMessagingProfileId() bool {
	if o != nil && !isNil(o.SmsMessagingProfileId) {
		return true
	}

	return false
}

// SetSmsMessagingProfileId gets a reference to the given string and assigns it to the SmsMessagingProfileId field.
func (o *Customer) SetSmsMessagingProfileId(v string) {
	o.SmsMessagingProfileId = &v
}

// GetSmsBearerToken returns the SmsBearerToken field value if set, zero value otherwise.
func (o *Customer) GetSmsBearerToken() string {
	if o == nil || isNil(o.SmsBearerToken) {
		var ret string
		return ret
	}
	return *o.SmsBearerToken
}

// GetSmsBearerTokenOk returns a tuple with the SmsBearerToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetSmsBearerTokenOk() (*string, bool) {
	if o == nil || isNil(o.SmsBearerToken) {
    return nil, false
	}
	return o.SmsBearerToken, true
}

// HasSmsBearerToken returns a boolean if a field has been set.
func (o *Customer) HasSmsBearerToken() bool {
	if o != nil && !isNil(o.SmsBearerToken) {
		return true
	}

	return false
}

// SetSmsBearerToken gets a reference to the given string and assigns it to the SmsBearerToken field.
func (o *Customer) SetSmsBearerToken(v string) {
	o.SmsBearerToken = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Customer) GetCreatedAt() time.Time {
	if o == nil || isNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.CreatedAt) {
    return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Customer) HasCreatedAt() bool {
	if o != nil && !isNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *Customer) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *Customer) GetUpdatedAt() time.Time {
	if o == nil || isNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.UpdatedAt) {
    return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Customer) HasUpdatedAt() bool {
	if o != nil && !isNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *Customer) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o Customer) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.SendingPhoneNumber) {
		toSerialize["sendingPhoneNumber"] = o.SendingPhoneNumber
	}
	if !isNil(o.SmsMessagingProfileId) {
		toSerialize["smsMessagingProfileId"] = o.SmsMessagingProfileId
	}
	if !isNil(o.SmsBearerToken) {
		toSerialize["smsBearerToken"] = o.SmsBearerToken
	}
	if !isNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !isNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableCustomer struct {
	value *Customer
	isSet bool
}

func (v NullableCustomer) Get() *Customer {
	return v.value
}

func (v *NullableCustomer) Set(val *Customer) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomer) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomer(val *Customer) *NullableCustomer {
	return &NullableCustomer{value: val, isSet: true}
}

func (v NullableCustomer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


