/**
 *
 * Please note:
 * This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package dm.sent.client.models


import com.squareup.moshi.Json

/**
 * Represents a contact in the Sent messaging platform with their communication preferences and channel availability
 *
 * @param id Unique identifier for the contact
 * @param phoneNumber Contact's phone number in E.164 format
 * @param countryCode Two-letter ISO country code
 * @param nationalFormat Phone number formatted according to national standards
 * @param availableChannels Comma-separated list of available messaging channels (SMS, WHATSAPP)
 * @param defaultChannel Preferred messaging channel for this contact
 * @param verified Indicates if the contact's phone number has been verified
 * @param createdAt Timestamp when the contact was created
 * @param updatedAt Timestamp when the contact was last updated
 */

data class Contact (

    /* Unique identifier for the contact */
    @Json(name = "id")
    val id: java.util.UUID? = null,

    /* Contact's phone number in E.164 format */
    @Json(name = "phoneNumber")
    val phoneNumber: kotlin.String? = null,

    /* Two-letter ISO country code */
    @Json(name = "countryCode")
    val countryCode: kotlin.String? = null,

    /* Phone number formatted according to national standards */
    @Json(name = "nationalFormat")
    val nationalFormat: kotlin.String? = null,

    /* Comma-separated list of available messaging channels (SMS, WHATSAPP) */
    @Json(name = "availableChannels")
    val availableChannels: kotlin.String? = null,

    /* Preferred messaging channel for this contact */
    @Json(name = "defaultChannel")
    val defaultChannel: kotlin.String? = null,

    /* Indicates if the contact's phone number has been verified */
    @Json(name = "verified")
    val verified: kotlin.Boolean? = null,

    /* Timestamp when the contact was created */
    @Json(name = "createdAt")
    val createdAt: java.time.OffsetDateTime? = null,

    /* Timestamp when the contact was last updated */
    @Json(name = "updatedAt")
    val updatedAt: java.time.OffsetDateTime? = null

)

