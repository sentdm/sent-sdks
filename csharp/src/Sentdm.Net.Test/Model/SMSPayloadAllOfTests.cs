/*
 * Sent.dm Core API
 *
 * Sent.dm is a unified messaging API that enables developers to seamlessly send messages across multiple channels including SMS and WhatsApp. It provides programmatic management of customer accounts, messaging capabilities with intelligent routing, message delivery, and template management. The API supports creating, updating, and managing customer profiles, sending messages using templates, retrieving contact information, and handling templates across different messaging channels.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developers@sent.dm
 * Generated by: https://konfigthis.com
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Sentdm.Net.Api;
using Sentdm.Net.Model;
using Sentdm.Net.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Sentdm.Net.Test.Model
{
    /// <summary>
    ///  Class for testing SMSPayloadAllOf
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Konfig (https://konfigthis.com).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class SMSPayloadAllOfTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for SMSPayloadAllOf
        //private SMSPayloadAllOf instance;

        public SMSPayloadAllOfTests()
        {
            // TODO uncomment below to create an instance of SMSPayloadAllOf
            //instance = new SMSPayloadAllOf();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SMSPayloadAllOf
        /// </summary>
        [Fact]
        public void SMSPayloadAllOfInstanceTest()
        {
            // TODO uncomment below to test "IsType" SMSPayloadAllOf
            //Assert.IsType<SMSPayloadAllOf>(instance);
        }


        /// <summary>
        /// Test the property 'CountryCode'
        /// </summary>
        [Fact]
        public void CountryCodeTest()
        {
            // TODO unit test for the property 'CountryCode'
        }
        /// <summary>
        /// Test the property 'ValidNumber'
        /// </summary>
        [Fact]
        public void ValidNumberTest()
        {
            // TODO unit test for the property 'ValidNumber'
        }
        /// <summary>
        /// Test the property 'NationalFormat'
        /// </summary>
        [Fact]
        public void NationalFormatTest()
        {
            // TODO unit test for the property 'NationalFormat'
        }
        /// <summary>
        /// Test the property 'Payload'
        /// </summary>
        [Fact]
        public void PayloadTest()
        {
            // TODO unit test for the property 'Payload'
        }

    }

}
