/*
 * Sent.dm Core API
 *
 * Sent.dm is a unified messaging API that enables developers to seamlessly send messages across multiple channels including SMS and WhatsApp. It provides programmatic management of customer accounts, messaging capabilities with intelligent routing, message delivery, and template management. The API supports creating, updating, and managing customer profiles, sending messages using templates, retrieving contact information, and handling templates across different messaging channels.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developers@sent.dm
 * Generated by: https://konfigthis.com
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Sentdm.Net.Api;
using Sentdm.Net.Model;
using Sentdm.Net.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Sentdm.Net.Test.Model
{
    /// <summary>
    ///  Class for testing TemplateCreateRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Konfig (https://konfigthis.com).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class TemplateCreateRequestTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for TemplateCreateRequest
        //private TemplateCreateRequest instance;

        public TemplateCreateRequestTests()
        {
            // TODO uncomment below to create an instance of TemplateCreateRequest
            //instance = new TemplateCreateRequest();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TemplateCreateRequest
        /// </summary>
        [Fact]
        public void TemplateCreateRequestInstanceTest()
        {
            // TODO uncomment below to test "IsType" TemplateCreateRequest
            //Assert.IsType<TemplateCreateRequest>(instance);
        }


        /// <summary>
        /// Test the property 'CustomerId'
        /// </summary>
        [Fact]
        public void CustomerIdTest()
        {
            // TODO unit test for the property 'CustomerId'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

    }

}
