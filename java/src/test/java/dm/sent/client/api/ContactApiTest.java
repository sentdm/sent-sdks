/*
 * Sent.dm Core API
 * Sent.dm is a unified messaging API that enables developers to seamlessly send messages across multiple channels including SMS and WhatsApp. It provides programmatic management of customer accounts, messaging capabilities with intelligent routing, message delivery, and template management. The API supports creating, updating, and managing customer profiles, sending messages using templates, retrieving contact information, and handling templates across different messaging channels.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developers@sent.dm
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package dm.sent.client.api;

import dm.sent.client.ApiException;
import dm.sent.client.ApiClient;
import dm.sent.client.ApiException;
import dm.sent.client.Configuration;
import dm.sent.client.model.Contact;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ContactApi
 */
@Disabled
public class ContactApiTest {

    private static ContactApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ContactApi(apiClient);
    }

    /**
     * Retrieve a contact by ID
     *
     * Fetches detailed contact information including available messaging channels and verification status. Use this endpoint when you need to look up a specific contact using their unique identifier.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getContactByIdTest() throws ApiException {
        UUID customerId = null;
        UUID id = null;
        Contact response = api.getContactById(customerId, id)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve a contact by phone number
     *
     * Looks up contact information using a phone number. This endpoint is useful when you need to find a contact&#39;s details but only have their phone number. It returns the same detailed information as the ID-based lookup.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getContactByPhoneTest() throws ApiException {
        UUID customerId = null;
        String phoneNumber = null;
        Contact response = api.getContactByPhone(customerId, phoneNumber)
                .execute();
        // TODO: test validations
    }

}
