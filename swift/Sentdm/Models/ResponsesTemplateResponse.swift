//
// ResponsesTemplateResponse.swift
//
// Generated by Konfig
// https://konfigthis.com
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Response model containing template details */
public struct ResponsesTemplateResponse: Codable, JSONEncodable, Hashable {

    public enum Category: String, Codable, CaseIterable {
        case transactional = "transactional"
        case marketing = "marketing"
        case alert = "alert"
    }
    public enum WhatsappTemplateStatus: String, Codable, CaseIterable {
        case pending = "pending"
        case approved = "approved"
        case rejected = "rejected"
    }
    /** Unique identifier of the template */
    public var id: String?
    /** Customer ID associated with the template */
    public var customerId: String?
    /** Template name */
    public var name: String?
    /** Category of the template (e.g., transactional, marketing) */
    public var category: Category?
    /** Template content with variable placeholders */
    public var rawBody: String?
    /** Associated WhatsApp template name if applicable */
    public var whatsappTemplateName: String?
    /** Approval status of WhatsApp template */
    public var whatsappTemplateStatus: WhatsappTemplateStatus?
    /** Template creation timestamp */
    public var createdAt: Date?
    /** Last template update timestamp */
    public var updatedAt: Date?

    public init(id: String? = nil, customerId: String? = nil, name: String? = nil, category: Category? = nil, rawBody: String? = nil, whatsappTemplateName: String? = nil, whatsappTemplateStatus: WhatsappTemplateStatus? = nil, createdAt: Date? = nil, updatedAt: Date? = nil) {
        self.id = id
        self.customerId = customerId
        self.name = name
        self.category = category
        self.rawBody = rawBody
        self.whatsappTemplateName = whatsappTemplateName
        self.whatsappTemplateStatus = whatsappTemplateStatus
        self.createdAt = createdAt
        self.updatedAt = updatedAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case customerId
        case name
        case category
        case rawBody
        case whatsappTemplateName
        case whatsappTemplateStatus
        case createdAt
        case updatedAt
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var codingContainer = encoder.container(keyedBy: CodingKeys.self)
        try codingContainer.encodeIfPresent(id, forKey: .id)
        try codingContainer.encodeIfPresent(customerId, forKey: .customerId)
        try codingContainer.encodeIfPresent(name, forKey: .name)
        try codingContainer.encodeIfPresent(category, forKey: .category)
        try codingContainer.encodeIfPresent(rawBody, forKey: .rawBody)
        try codingContainer.encodeIfPresent(whatsappTemplateName, forKey: .whatsappTemplateName)
        try codingContainer.encodeIfPresent(whatsappTemplateStatus, forKey: .whatsappTemplateStatus)
        try codingContainer.encodeIfPresent(createdAt, forKey: .createdAt)
        try codingContainer.encodeIfPresent(updatedAt, forKey: .updatedAt)
    }
}

