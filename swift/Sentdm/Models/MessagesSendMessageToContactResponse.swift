//
// MessagesSendMessageToContactResponse.swift
//
// Generated by Konfig
// https://konfigthis.com
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct MessagesSendMessageToContactResponse: Codable, JSONEncodable, Hashable {

    public enum Status: String, Codable, CaseIterable {
        case queued = "queued"
        case sending = "sending"
        case delivered = "delivered"
    }
    public enum Channel: String, Codable, CaseIterable {
        case sms = "sms"
        case whatsapp = "whatsapp"
    }
    /** Unique identifier for tracking the message */
    public var messageId: String?
    /** Current status of the message */
    public var status: Status?
    /** Selected delivery channel */
    public var channel: Channel?

    public init(messageId: String? = nil, status: Status? = nil, channel: Channel? = nil) {
        self.messageId = messageId
        self.status = status
        self.channel = channel
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case messageId
        case status
        case channel
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var codingContainer = encoder.container(keyedBy: CodingKeys.self)
        try codingContainer.encodeIfPresent(messageId, forKey: .messageId)
        try codingContainer.encodeIfPresent(status, forKey: .status)
        try codingContainer.encodeIfPresent(channel, forKey: .channel)
    }
}

